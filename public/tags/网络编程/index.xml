<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络编程 on felix&#39;s blog</title>
    <link>https://felixie99.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 网络编程 on felix&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 May 2023 22:06:14 +0800</lastBuildDate><atom:link href="https://felixie99.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IO多路复用</title>
      <link>https://felixie99.github.io/post/io_multiplexing/</link>
      <pubDate>Mon, 29 May 2023 22:06:14 +0800</pubDate>
      
      <guid>https://felixie99.github.io/post/io_multiplexing/</guid>
      <description>我们以「如何服务更多的用户」这一问题引入IO多路复用 如果服务器的内存只有 2 GB，网卡是千兆的，能支持并发 1 万请求吗？ 并发 1 万请求，也就是经典</description>
    </item>
    
    <item>
      <title>阻塞/非阻塞IO VS 同步/异步IO</title>
      <link>https://felixie99.github.io/post/io/</link>
      <pubDate>Mon, 29 May 2023 21:33:46 +0800</pubDate>
      
      <guid>https://felixie99.github.io/post/io/</guid>
      <description>由于老是把它两搞混，所以就写一下笔记吧 针对网络IO的操作，可以分为两个阶段，准备阶段和操作阶段。 准备阶段判断是否能够操作（即等待数据是否可用</description>
    </item>
    
  </channel>
</rss>
